## ams_version=1.0

Model Main_Hulajnogi {
	Set Locations {
		Index: l, lfrom, lto;
		Definition: data { 'Location 1', 'Location 2', 'Location 3', 'Location 4', 'Location 5' };
	}
	Variable y {
		IndexDomain: (l,lto);
		Range: binary;
	}
	Variable OverallHappiness {
		Range: free;
		Definition: sum[(l,lto), (MaxDistance(l) - Distance(l,lto)) * y(l,lto) * Happiness(l)];
	}
	Variable e {
		IndexDomain: l;
		Range: binary;
	}
	Parameter Distance {
		IndexDomain: (lfrom,lto);
		Range: nonnegative;
		Definition: {
			data 
			{ ( 'Location 1', 'Location 2' ) : 3,  ( 'Location 1', 'Location 3' ) : 5,  ( 'Location 1', 'Location 4' ) : 7,
			  ( 'Location 1', 'Location 5' ) : 9,  ( 'Location 2', 'Location 1' ) : 3,  ( 'Location 2', 'Location 3' ) : 4,
			  ( 'Location 2', 'Location 4' ) : 6,  ( 'Location 2', 'Location 5' ) : 8,  ( 'Location 3', 'Location 1' ) : 5,
			  ( 'Location 3', 'Location 2' ) : 4,  ( 'Location 3', 'Location 4' ) : 5,  ( 'Location 3', 'Location 5' ) : 5,
			  ( 'Location 4', 'Location 1' ) : 7,  ( 'Location 4', 'Location 2' ) : 6,  ( 'Location 4', 'Location 3' ) : 5,
			  ( 'Location 4', 'Location 5' ) : 6,  ( 'Location 5', 'Location 1' ) : 9,  ( 'Location 5', 'Location 2' ) : 8,
			  ( 'Location 5', 'Location 3' ) : 5,  ( 'Location 5', 'Location 4' ) : 6}
		}
	}
	Parameter MaxDistance {
		IndexDomain: l;
		Range: nonnegative;
		Definition: data { 'Location 1' : 4,  'Location 2' : 10,  'Location 3' : 2,  'Location 4' : 3,  'Location 5' : 5 };
	}
	Parameter n {
		Range: integer;
		Definition: {
			5;
		}
	}
	Parameter m {
		Range: integer;
		Definition: {
			2 ;
		}
	}
	Parameter Happiness {
		IndexDomain: l;
		Range: nonnegative;
		Definition: data { 'Location 1' : 2,  'Location 2' : 3,  'Location 3' : 2,  'Location 4' : 3,  'Location 5' : 2 };
	}
	Parameter u {
		IndexDomain: l;
		Definition: data { 'Location 1' : 1,  'Location 3' : 1,  'Location 4' : 1,  'Location 5' : 1 };
	}
	Constraint ForbiddenLocation {
		IndexDomain: l;
		Definition: e(l) <= u(l);
	}
	Constraint MaxStations {
		Definition: sum[l, e(l)] <= m;
	}
	Constraint Ycons {
		IndexDomain: l;
		Definition: sum[lto, y(l,lto)] = 1;
	}
	Constraint YEcons {
		IndexDomain: (l,lto);
		Definition: y(l,lto) <= e(lto);
	}
	MathematicalProgram OptimalResult {
		Objective: OverallHappiness;
		Direction: maximize;
		Constraints: AllConstraints;
		Variables: AllVariables;
		Type: Automatic;
	}
	Procedure MainInitialization {
		Comment: "Add initialization statements here that do NOT require any library being initialized already.";
	}
	Procedure PostMainInitialization {
		Comment: {
			"Add initialization statements here that require that the libraries are already initialized properly,
			or add statements that require the Data Management module to be initialized."
		}
	}
	Procedure MainExecution {
		Body: {
			solve OptimalResult;
		}
	}
	Procedure PreMainTermination {
		Body: {
			return DataManagementExit();
		}
		Comment: {
			"Add termination statements here that require all libraries to be still alive.
			Return 1 if you allow the termination sequence to continue.
			Return 0 if you want to cancel the termination sequence."
		}
	}
	Procedure MainTermination {
		Body: {
			return 1;
		}
		Comment: {
			"Add termination statements here that do not require all libraries to be still alive.
			Return 1 to allow the termination sequence to continue.
			Return 0 if you want to cancel the termination sequence.
			It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
		}
	}
	Section Quantities_and_Units {
		Comment: {
			"This section contains all the units and quantities that are added automatically by AIMMS.
			It is recommended to declare all your quantities here."
		}
		Quantity SI_Time_Duration {
			BaseUnit: s;
			Conversions: minute->s : #-># * 60;
			Comment: {
				"Expresses the value for the duration of periods.
				
				The unit s has been added automatically because it is a required unit for AimmsWebUI.
				
				The unit minute has been added automatically because it is a required unit for AimmsWebUI."
			}
		}
	}
}
